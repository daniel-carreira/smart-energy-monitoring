<?xml version="1.0" encoding="UTF-8"?><process version="9.10.007">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.10.007" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="generate_macro" compatibility="9.10.007" expanded="true" height="68" name="USER_ID" width="90" x="112" y="85">
        <list key="function_descriptions">
          <parameter key="USER_ID" value="1"/>
        </list>
      </operator>
      <operator activated="false" class="jdbc_connectors:read_database" compatibility="9.10.007" expanded="true" height="82" name="Base examples" width="90" x="313" y="34">
        <parameter key="define_connection" value="repository"/>
        <parameter key="connection_entry" value="/Connections/DB"/>
        <parameter key="database_system" value="MySQL"/>
        <parameter key="define_query" value="query"/>
        <parameter key="use_default_schema" value="true"/>
        <parameter key="prepare_statement" value="false"/>
        <enumeration key="parameters"/>
        <parameter key="datamanagement" value="double_array"/>
        <parameter key="data_management" value="auto"/>
      </operator>
      <operator activated="true" class="jdbc_connectors:read_database" compatibility="9.10.007" expanded="true" height="82" name="Custom examples" width="90" x="313" y="187">
        <parameter key="define_connection" value="repository"/>
        <parameter key="connection_entry" value="/Connections/DB"/>
        <parameter key="database_system" value="MySQL"/>
        <parameter key="define_query" value="query"/>
        <parameter key="query" value="SELECT UNIX_TIMESTAMP(time) AS &quot;timestamp&quot;, `consumption` AS &quot;power&quot;, equipment_id as &quot;id&quot;, equipment_consumption as &quot;app_power&quot;&#10;FROM `training_examples`&#10;WHERE user_id = %{USER_ID}"/>
        <parameter key="use_default_schema" value="true"/>
        <parameter key="prepare_statement" value="false"/>
        <enumeration key="parameters"/>
        <parameter key="datamanagement" value="double_array"/>
        <parameter key="data_management" value="auto"/>
      </operator>
      <operator activated="false" class="union" compatibility="9.10.007" expanded="true" height="82" name="Union" width="90" x="514" y="34"/>
      <operator activated="true" class="jdbc_connectors:read_database" compatibility="9.10.007" expanded="true" height="82" name="Equipments" width="90" x="313" y="340">
        <parameter key="define_connection" value="repository"/>
        <parameter key="connection_entry" value="/Connections/DB"/>
        <parameter key="database_system" value="MySQL"/>
        <parameter key="define_query" value="query"/>
        <parameter key="query" value="SELECT id&#10;FROM equipments&#10;WHERE user_id = %{USER_ID}"/>
        <parameter key="use_default_schema" value="true"/>
        <parameter key="prepare_statement" value="false"/>
        <enumeration key="parameters"/>
        <parameter key="datamanagement" value="double_array"/>
        <parameter key="data_management" value="auto"/>
      </operator>
      <operator activated="true" class="execute_script" compatibility="9.10.007" expanded="true" height="103" name="Execute Script" width="90" x="514" y="187">
        <parameter key="script" value="import com.rapidminer.tools.Ontology;&#10;import com.rapidminer.tools.LogService;&#10;import java.util.logging.Level;&#10;import java.text.DecimalFormat;&#10;&#10;def df = new DecimalFormat(&quot;#0.00&quot;)&#10;&#10;ExampleSet dataset = input[0];&#10;ExampleSet equipments = input[1];&#10;&#10;//Map Appliance ID =&gt; Attribute ID&#10;def map = [:];&#10;&#10;Attribute[] attributes = new Attribute[equipments.size() + 2];&#10;attributes[0] = AttributeFactory.createAttribute(&quot;timestamp&quot;, Ontology.NOMINAL);&#10;attributes[1] = AttributeFactory.createAttribute(&quot;power&quot;, Ontology.NOMINAL);&#10;for (int i = 2; i &lt; attributes.size(); i++) {&#10;&#9;int applianceID = equipments.getExample(i - 2)[&quot;id&quot;];&#10;&#9;attributes[i] = AttributeFactory.createAttribute(&quot;appliance&quot;+ applianceID, Ontology.NOMINAL);&#10;&#9;def imap = [(applianceID as int): i];&#10;&#9;map.putAll(imap);&#10;}&#10;&#10;//Create ExampleTable&#10;MemoryExampleTable dataTable = new MemoryExampleTable(attributes);&#10;DataRowFactory ROW_FACTORY = new DataRowFactory(0);&#10;&#10;//Add rows&#10;long lastTimestamp = dataset.size() &gt; 0 ? dataset.getExample(0)[&quot;timestamp&quot;] as long: 0;&#10;&#10;for (int i = 0; i &lt; dataset.size(); i++) {&#10;&#9;currRow = dataset.getExample(i);&#10;&#9;&#10;&#9;String[] dataArray = new String[attributes.size()];&#10;&#10;&#9;//Initialize Array&#10;&#9;&#10;&#9;for (int k = 0; k &lt; dataArray.size(); k++) {&#10;&#9;&#9;dataArray[k] = &quot;0&quot;;&#10;&#9;}&#10;&#9;&#10;&#10;&#9;dataArray[0] = String.format(&quot;%.0f&quot;, currRow[&quot;timestamp&quot;]); //timestamp&#10;&#9;dataArray[1] = currRow[&quot;power&quot;].toString();                 //power&#10;&#9;&#10;&#9;for (int j = i; j &lt; dataset.size(); j++) {&#10;&#9;&#9;if(j == dataset.size()-1){&#10;&#9;&#9;&#9;i = j;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;targetRow = dataset.getExample(j);&#10;&#9;&#9;if (targetRow[&quot;timestamp&quot;] != lastTimestamp) {&#10;&#9;&#9;&#9;lastTimestamp = targetRow[&quot;timestamp&quot;];&#10;&#9;&#9;&#9;i = j-1;&#10;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;&#9;int pos = map[targetRow[&quot;id&quot;] as int];&#10;&#9;&#9;LogService.getRoot().warning( dataset.getExample(j)[&quot;id&quot;] + &quot;&quot;);&#10;&#9;&#9;if(targetRow[&quot;app_power&quot;] != 0){&#10;&#9;&#9;&#9;dataArray[pos] = targetRow[&quot;app_power&quot;].toString();    //appliance_power&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;DataRow row = ROW_FACTORY.create(dataArray, attributes);&#10;&#9;dataTable.addDataRow(row);&#10;}&#10;&#10;return dataTable.createExampleSet();"/>
        <parameter key="standard_imports" value="true"/>
      </operator>
      <operator activated="true" class="write_csv" compatibility="9.10.007" expanded="true" height="82" name="Write CSV" width="90" x="715" y="187">
        <parameter key="csv_file" value="D:/GitRepository/SEM/Rapidminer/Local Repository/data/dataset1.csv"/>
        <parameter key="column_separator" value=","/>
        <parameter key="write_attribute_names" value="true"/>
        <parameter key="quote_nominal_values" value="false"/>
        <parameter key="format_date_attributes" value="false"/>
        <parameter key="date_format" value="yyyy-MM-dd HH:mm:ss"/>
        <parameter key="append_to_file" value="false"/>
        <parameter key="encoding" value="SYSTEM"/>
      </operator>
      <connect from_op="Custom examples" from_port="output" to_op="Execute Script" to_port="input 1"/>
      <connect from_op="Equipments" from_port="output" to_op="Execute Script" to_port="input 2"/>
      <connect from_op="Execute Script" from_port="output 1" to_op="Write CSV" to_port="input"/>
      <connect from_op="Write CSV" from_port="through" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
    </process>
  </operator>
</process>
